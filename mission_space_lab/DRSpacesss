#Dr Space's Code
from logzero import logger, logfile
from ephem import readtle, degree
from picamera import PiCamera
from datetime import datetime, timedelta
from time import sleep
import random
from pathlib import Path
import csv

dir_path = Path(__file__).parent.resolve()

# Captain's Log
logfile(dir_path / "drspace.log")

# Where is the ISS
name = "ISS (ZARYA)"
line1 = "1 25544U 98067A   20316.41516162  .00001589  00000+0  36499-4 0  9995"
line2 = "2 25544  51.6454 339.9628 0001882  94.8340 265.2864 15.49409479254842"
station = readtle(name, line1, line2)


# Set up camera
phototaker = PiCamera()
phototaker.resolution = (1296, 972)


def newcsv(fileddata):
	"""New CSV file"""
	with open(fileddata, 'w') as f:
		writer = csv.writer(f)
		header = ("Date/time", "Temperature", "Humidity")
		writer.writerow(header)


def adddata(data_file, data):
	"""Add a row of data to the data_file CSV"""
	with open(data_file, 'a') as f:
		writer = csv.writer(f)
		writer.writerow(data)


def latitudeandlong():
	"""Find the lat long"""
  station.compute()  # Get the lat/long values from ephem
	station (.sublat / degree, station.sublong / degree)


def angleconversion(angle):
	"""
converts angles so we can use EXIF
    """
	degrees, minutes, seconds = (float(field)
	                             for field in str(angle).split(":"))
	exif_angle = f'{abs(degrees):.0f}/1,{minutes:.0f}/1,{seconds*10:.0f}/10'
	return degrees < 0, exif_angle


def photo(camera, image):
	"""Take a picutre and infuse it with EXIF info"""
	iss.compute()  # start wtih the lat/long values

	# convert lat/longitude to EXIF
	south, exif_latitude = angleconversion(iss.sublat)
	west, exif_longitude = angleconversion(iss.sublong)

	# set the EXIF tags specifying the current location
	camera.exif_tags['GPS.GPSLatitude'] = exif_latitude
	camera.exif_tags['GPS.GPSLatitudeRef'] = "S" if south else "N"
	camera.exif_tags['GPS.GPSLongitude'] = exif_longitude
	camera.exif_tags['GPS.GPSLongitudeRef'] = "W" if west else "E"

	# capture the image
	camera.capture(image)


# initialise the CSV file
data_file = dir_path / "data.csv"
newcsv(data_file)
# initialise the photo counter
photo_counter = 1
# record the start and current time
start_time = datetime.now()
now_time = datetime.now()
# run a loop for (almost) three hours
while (now_time < start_time + timedelta(minutes=178)):
	try:
		humidity = round(sh.humidity, 4)
		temperature = round(sh.temperature, 4)
		# get latitude and longitude
		latitude, longitude = latitudeandlong()
		# Save the data to the file
		data = (datetime.now(), photo_counter, humidity, temperature, latitude,
		        longitude)
		adddata(data_file, data)
		# capture image
		image_file = f"{dir_path}/photo_{photo_counter:03d}.jpg"
		photo(phototaker, image_file)
		logger.info(f"iteration {photo_counter}")
		photo_counter += 1
		sleep(30)
		# update the current time
		now_time = datetime.now()
	except Exception as e:
		logger.error('{}: {})'.format(e.__class__.__name__, e))
